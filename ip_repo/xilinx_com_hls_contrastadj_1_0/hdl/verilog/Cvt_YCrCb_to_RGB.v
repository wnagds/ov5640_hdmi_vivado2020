// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Cvt_YCrCb_to_RGB (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        p_src_data_stream_0_V_dout,
        p_src_data_stream_0_V_empty_n,
        p_src_data_stream_0_V_read,
        p_src_data_stream_1_V_dout,
        p_src_data_stream_1_V_empty_n,
        p_src_data_stream_1_V_read,
        p_src_data_stream_2_V_dout,
        p_src_data_stream_2_V_empty_n,
        p_src_data_stream_2_V_read,
        p_dst_data_stream_0_V_din,
        p_dst_data_stream_0_V_full_n,
        p_dst_data_stream_0_V_write,
        p_dst_data_stream_1_V_din,
        p_dst_data_stream_1_V_full_n,
        p_dst_data_stream_1_V_write,
        p_dst_data_stream_2_V_din,
        p_dst_data_stream_2_V_full_n,
        p_dst_data_stream_2_V_write
);

parameter    ap_ST_fsm_state1 = 4'd1;
parameter    ap_ST_fsm_state2 = 4'd2;
parameter    ap_ST_fsm_pp0_stage0 = 4'd4;
parameter    ap_ST_fsm_state60 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [7:0] p_src_data_stream_0_V_dout;
input   p_src_data_stream_0_V_empty_n;
output   p_src_data_stream_0_V_read;
input  [7:0] p_src_data_stream_1_V_dout;
input   p_src_data_stream_1_V_empty_n;
output   p_src_data_stream_1_V_read;
input  [7:0] p_src_data_stream_2_V_dout;
input   p_src_data_stream_2_V_empty_n;
output   p_src_data_stream_2_V_read;
output  [7:0] p_dst_data_stream_0_V_din;
input   p_dst_data_stream_0_V_full_n;
output   p_dst_data_stream_0_V_write;
output  [7:0] p_dst_data_stream_1_V_din;
input   p_dst_data_stream_1_V_full_n;
output   p_dst_data_stream_1_V_write;
output  [7:0] p_dst_data_stream_2_V_din;
input   p_dst_data_stream_2_V_full_n;
output   p_dst_data_stream_2_V_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg p_src_data_stream_0_V_read;
reg p_src_data_stream_1_V_read;
reg p_src_data_stream_2_V_read;
reg p_dst_data_stream_0_V_write;
reg p_dst_data_stream_1_V_write;
reg p_dst_data_stream_2_V_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg    p_src_data_stream_0_V_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] exitcond_reg_1023;
reg    p_src_data_stream_1_V_blk_n;
reg    p_src_data_stream_2_V_blk_n;
reg    p_dst_data_stream_0_V_blk_n;
reg    ap_enable_reg_pp0_iter56;
reg   [0:0] ap_reg_pp0_iter55_exitcond_reg_1023;
reg    p_dst_data_stream_1_V_blk_n;
reg    p_dst_data_stream_2_V_blk_n;
reg   [10:0] j_reg_236;
wire   [0:0] exitcond1_fu_360_p2;
wire    ap_CS_fsm_state2;
wire   [10:0] i_2_fu_366_p2;
reg   [10:0] i_2_reg_1018;
wire   [0:0] exitcond_fu_372_p2;
wire    ap_block_state3_pp0_stage0_iter0;
reg    ap_block_state4_pp0_stage0_iter1;
wire    ap_block_state5_pp0_stage0_iter2;
wire    ap_block_state6_pp0_stage0_iter3;
wire    ap_block_state7_pp0_stage0_iter4;
wire    ap_block_state8_pp0_stage0_iter5;
wire    ap_block_state9_pp0_stage0_iter6;
wire    ap_block_state10_pp0_stage0_iter7;
wire    ap_block_state11_pp0_stage0_iter8;
wire    ap_block_state12_pp0_stage0_iter9;
wire    ap_block_state13_pp0_stage0_iter10;
wire    ap_block_state14_pp0_stage0_iter11;
wire    ap_block_state15_pp0_stage0_iter12;
wire    ap_block_state16_pp0_stage0_iter13;
wire    ap_block_state17_pp0_stage0_iter14;
wire    ap_block_state18_pp0_stage0_iter15;
wire    ap_block_state19_pp0_stage0_iter16;
wire    ap_block_state20_pp0_stage0_iter17;
wire    ap_block_state21_pp0_stage0_iter18;
wire    ap_block_state22_pp0_stage0_iter19;
wire    ap_block_state23_pp0_stage0_iter20;
wire    ap_block_state24_pp0_stage0_iter21;
wire    ap_block_state25_pp0_stage0_iter22;
wire    ap_block_state26_pp0_stage0_iter23;
wire    ap_block_state27_pp0_stage0_iter24;
wire    ap_block_state28_pp0_stage0_iter25;
wire    ap_block_state29_pp0_stage0_iter26;
wire    ap_block_state30_pp0_stage0_iter27;
wire    ap_block_state31_pp0_stage0_iter28;
wire    ap_block_state32_pp0_stage0_iter29;
wire    ap_block_state33_pp0_stage0_iter30;
wire    ap_block_state34_pp0_stage0_iter31;
wire    ap_block_state35_pp0_stage0_iter32;
wire    ap_block_state36_pp0_stage0_iter33;
wire    ap_block_state37_pp0_stage0_iter34;
wire    ap_block_state38_pp0_stage0_iter35;
wire    ap_block_state39_pp0_stage0_iter36;
wire    ap_block_state40_pp0_stage0_iter37;
wire    ap_block_state41_pp0_stage0_iter38;
wire    ap_block_state42_pp0_stage0_iter39;
wire    ap_block_state43_pp0_stage0_iter40;
wire    ap_block_state44_pp0_stage0_iter41;
wire    ap_block_state45_pp0_stage0_iter42;
wire    ap_block_state46_pp0_stage0_iter43;
wire    ap_block_state47_pp0_stage0_iter44;
wire    ap_block_state48_pp0_stage0_iter45;
wire    ap_block_state49_pp0_stage0_iter46;
wire    ap_block_state50_pp0_stage0_iter47;
wire    ap_block_state51_pp0_stage0_iter48;
wire    ap_block_state52_pp0_stage0_iter49;
wire    ap_block_state53_pp0_stage0_iter50;
wire    ap_block_state54_pp0_stage0_iter51;
wire    ap_block_state55_pp0_stage0_iter52;
wire    ap_block_state56_pp0_stage0_iter53;
wire    ap_block_state57_pp0_stage0_iter54;
wire    ap_block_state58_pp0_stage0_iter55;
reg    ap_block_state59_pp0_stage0_iter56;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] ap_reg_pp0_iter1_exitcond_reg_1023;
reg   [0:0] ap_reg_pp0_iter2_exitcond_reg_1023;
reg   [0:0] ap_reg_pp0_iter3_exitcond_reg_1023;
reg   [0:0] ap_reg_pp0_iter4_exitcond_reg_1023;
reg   [0:0] ap_reg_pp0_iter5_exitcond_reg_1023;
reg   [0:0] ap_reg_pp0_iter6_exitcond_reg_1023;
reg   [0:0] ap_reg_pp0_iter7_exitcond_reg_1023;
reg   [0:0] ap_reg_pp0_iter8_exitcond_reg_1023;
reg   [0:0] ap_reg_pp0_iter9_exitcond_reg_1023;
reg   [0:0] ap_reg_pp0_iter10_exitcond_reg_1023;
reg   [0:0] ap_reg_pp0_iter11_exitcond_reg_1023;
reg   [0:0] ap_reg_pp0_iter12_exitcond_reg_1023;
reg   [0:0] ap_reg_pp0_iter13_exitcond_reg_1023;
reg   [0:0] ap_reg_pp0_iter14_exitcond_reg_1023;
reg   [0:0] ap_reg_pp0_iter15_exitcond_reg_1023;
reg   [0:0] ap_reg_pp0_iter16_exitcond_reg_1023;
reg   [0:0] ap_reg_pp0_iter17_exitcond_reg_1023;
reg   [0:0] ap_reg_pp0_iter18_exitcond_reg_1023;
reg   [0:0] ap_reg_pp0_iter19_exitcond_reg_1023;
reg   [0:0] ap_reg_pp0_iter20_exitcond_reg_1023;
reg   [0:0] ap_reg_pp0_iter21_exitcond_reg_1023;
reg   [0:0] ap_reg_pp0_iter22_exitcond_reg_1023;
reg   [0:0] ap_reg_pp0_iter23_exitcond_reg_1023;
reg   [0:0] ap_reg_pp0_iter24_exitcond_reg_1023;
reg   [0:0] ap_reg_pp0_iter25_exitcond_reg_1023;
reg   [0:0] ap_reg_pp0_iter26_exitcond_reg_1023;
reg   [0:0] ap_reg_pp0_iter27_exitcond_reg_1023;
reg   [0:0] ap_reg_pp0_iter28_exitcond_reg_1023;
reg   [0:0] ap_reg_pp0_iter29_exitcond_reg_1023;
reg   [0:0] ap_reg_pp0_iter30_exitcond_reg_1023;
reg   [0:0] ap_reg_pp0_iter31_exitcond_reg_1023;
reg   [0:0] ap_reg_pp0_iter32_exitcond_reg_1023;
reg   [0:0] ap_reg_pp0_iter33_exitcond_reg_1023;
reg   [0:0] ap_reg_pp0_iter34_exitcond_reg_1023;
reg   [0:0] ap_reg_pp0_iter35_exitcond_reg_1023;
reg   [0:0] ap_reg_pp0_iter36_exitcond_reg_1023;
reg   [0:0] ap_reg_pp0_iter37_exitcond_reg_1023;
reg   [0:0] ap_reg_pp0_iter38_exitcond_reg_1023;
reg   [0:0] ap_reg_pp0_iter39_exitcond_reg_1023;
reg   [0:0] ap_reg_pp0_iter40_exitcond_reg_1023;
reg   [0:0] ap_reg_pp0_iter41_exitcond_reg_1023;
reg   [0:0] ap_reg_pp0_iter42_exitcond_reg_1023;
reg   [0:0] ap_reg_pp0_iter43_exitcond_reg_1023;
reg   [0:0] ap_reg_pp0_iter44_exitcond_reg_1023;
reg   [0:0] ap_reg_pp0_iter45_exitcond_reg_1023;
reg   [0:0] ap_reg_pp0_iter46_exitcond_reg_1023;
reg   [0:0] ap_reg_pp0_iter47_exitcond_reg_1023;
reg   [0:0] ap_reg_pp0_iter48_exitcond_reg_1023;
reg   [0:0] ap_reg_pp0_iter49_exitcond_reg_1023;
reg   [0:0] ap_reg_pp0_iter50_exitcond_reg_1023;
reg   [0:0] ap_reg_pp0_iter51_exitcond_reg_1023;
reg   [0:0] ap_reg_pp0_iter52_exitcond_reg_1023;
reg   [0:0] ap_reg_pp0_iter53_exitcond_reg_1023;
reg   [0:0] ap_reg_pp0_iter54_exitcond_reg_1023;
wire   [10:0] j_1_fu_378_p2;
reg    ap_enable_reg_pp0_iter0;
reg   [7:0] tmp_83_reg_1032;
reg   [7:0] tmp_84_reg_1037;
reg   [7:0] ap_reg_pp0_iter2_tmp_84_reg_1037;
reg   [7:0] ap_reg_pp0_iter3_tmp_84_reg_1037;
reg   [7:0] ap_reg_pp0_iter4_tmp_84_reg_1037;
reg   [7:0] ap_reg_pp0_iter5_tmp_84_reg_1037;
reg   [7:0] ap_reg_pp0_iter6_tmp_84_reg_1037;
reg   [7:0] ap_reg_pp0_iter7_tmp_84_reg_1037;
reg   [7:0] ap_reg_pp0_iter8_tmp_84_reg_1037;
reg   [7:0] ap_reg_pp0_iter9_tmp_84_reg_1037;
reg   [7:0] ap_reg_pp0_iter10_tmp_84_reg_1037;
reg   [7:0] tmp_62_reg_1042;
wire   [31:0] grp_fu_262_p1;
reg   [31:0] y_reg_1057;
wire   [31:0] grp_fu_265_p1;
reg   [31:0] v_reg_1062;
wire   [31:0] grp_fu_247_p2;
reg   [31:0] tmp_s_reg_1072;
wire   [31:0] grp_fu_252_p2;
reg   [31:0] tmp_9_reg_1077;
wire   [31:0] grp_fu_268_p1;
reg   [31:0] u_reg_1082;
wire   [63:0] tmp_3_fu_280_p1;
reg   [63:0] tmp_3_reg_1087;
wire   [63:0] tmp_12_fu_283_p1;
reg   [63:0] tmp_12_reg_1092;
wire   [31:0] grp_fu_257_p2;
reg   [31:0] tmp_5_reg_1098;
wire   [63:0] tmp_6_fu_286_p1;
reg   [63:0] tmp_6_reg_1103;
wire   [63:0] grp_fu_335_p2;
reg   [63:0] tmp_4_reg_1109;
reg   [63:0] ap_reg_pp0_iter29_tmp_4_reg_1109;
reg   [63:0] ap_reg_pp0_iter30_tmp_4_reg_1109;
reg   [63:0] ap_reg_pp0_iter31_tmp_4_reg_1109;
reg   [63:0] ap_reg_pp0_iter32_tmp_4_reg_1109;
reg   [63:0] ap_reg_pp0_iter33_tmp_4_reg_1109;
reg   [63:0] ap_reg_pp0_iter34_tmp_4_reg_1109;
reg   [63:0] ap_reg_pp0_iter35_tmp_4_reg_1109;
reg   [63:0] ap_reg_pp0_iter36_tmp_4_reg_1109;
reg   [63:0] ap_reg_pp0_iter37_tmp_4_reg_1109;
wire   [63:0] grp_fu_340_p2;
reg   [63:0] tmp_13_reg_1116;
wire   [63:0] grp_fu_345_p2;
reg   [63:0] tmp_20_reg_1121;
wire   [63:0] grp_fu_350_p2;
reg   [63:0] tmp_7_reg_1126;
wire   [63:0] grp_fu_319_p2;
reg   [63:0] tmp_17_reg_1131;
wire   [63:0] grp_fu_355_p2;
reg   [63:0] tmp_18_reg_1136;
wire   [63:0] grp_fu_323_p2;
reg   [63:0] tmp_21_reg_1141;
wire   [31:0] grp_fu_271_p1;
reg   [31:0] b_reg_1146;
reg   [31:0] ap_reg_pp0_iter40_b_reg_1146;
reg   [31:0] ap_reg_pp0_iter41_b_reg_1146;
wire   [0:0] grp_fu_289_p2;
reg   [0:0] tmp_42_reg_1153;
wire   [31:0] b_1_fu_436_p3;
reg   [31:0] b_1_reg_1158;
reg   [31:0] ap_reg_pp0_iter43_b_1_reg_1158;
wire   [31:0] b_1_to_int_fu_443_p1;
reg   [31:0] b_1_to_int_reg_1164;
wire   [0:0] notlhs5_fu_460_p2;
reg   [0:0] notlhs5_reg_1169;
wire   [0:0] notrhs6_fu_466_p2;
reg   [0:0] notrhs6_reg_1174;
wire   [0:0] grp_fu_294_p2;
reg   [0:0] tmp_46_reg_1179;
wire   [22:0] loc_V_6_fu_498_p1;
reg   [22:0] loc_V_6_reg_1184;
wire   [0:0] isNeg_2_fu_512_p3;
reg   [0:0] isNeg_2_reg_1189;
wire   [8:0] sh_assign_5_fu_530_p3;
reg   [8:0] sh_assign_5_reg_1194;
wire   [63:0] grp_fu_327_p2;
reg   [63:0] tmp_8_reg_1200;
wire   [63:0] grp_fu_331_p2;
reg   [63:0] tmp_19_reg_1205;
wire   [7:0] p_Val2_19_fu_595_p3;
reg   [7:0] p_Val2_19_reg_1210;
reg   [7:0] ap_reg_pp0_iter47_p_Val2_19_reg_1210;
reg   [7:0] ap_reg_pp0_iter48_p_Val2_19_reg_1210;
reg   [7:0] ap_reg_pp0_iter49_p_Val2_19_reg_1210;
reg   [7:0] ap_reg_pp0_iter50_p_Val2_19_reg_1210;
reg   [7:0] ap_reg_pp0_iter51_p_Val2_19_reg_1210;
reg   [7:0] ap_reg_pp0_iter52_p_Val2_19_reg_1210;
reg   [7:0] ap_reg_pp0_iter53_p_Val2_19_reg_1210;
reg   [7:0] ap_reg_pp0_iter54_p_Val2_19_reg_1210;
reg   [7:0] ap_reg_pp0_iter55_p_Val2_19_reg_1210;
wire   [31:0] grp_fu_274_p1;
reg   [31:0] r_reg_1215;
reg   [31:0] ap_reg_pp0_iter49_r_reg_1215;
reg   [31:0] ap_reg_pp0_iter50_r_reg_1215;
wire   [31:0] grp_fu_277_p1;
reg   [31:0] g_reg_1222;
reg   [31:0] ap_reg_pp0_iter49_g_reg_1222;
reg   [31:0] ap_reg_pp0_iter50_g_reg_1222;
wire   [0:0] grp_fu_299_p2;
reg   [0:0] tmp_26_reg_1229;
wire   [0:0] grp_fu_304_p2;
reg   [0:0] tmp_34_reg_1234;
wire   [31:0] r_1_fu_642_p3;
reg   [31:0] r_1_reg_1239;
reg   [31:0] ap_reg_pp0_iter52_r_1_reg_1239;
wire   [31:0] g_1_fu_689_p3;
reg   [31:0] g_1_reg_1245;
reg   [31:0] ap_reg_pp0_iter52_g_1_reg_1245;
wire   [31:0] r_1_to_int_fu_696_p1;
reg   [31:0] r_1_to_int_reg_1251;
wire   [0:0] notlhs9_fu_713_p2;
reg   [0:0] notlhs9_reg_1256;
wire   [0:0] notrhs2_fu_719_p2;
reg   [0:0] notrhs2_reg_1261;
wire   [0:0] grp_fu_309_p2;
reg   [0:0] tmp_30_reg_1266;
wire   [31:0] g_1_to_int_fu_725_p1;
reg   [31:0] g_1_to_int_reg_1271;
wire   [0:0] notlhs3_fu_742_p2;
reg   [0:0] notlhs3_reg_1276;
wire   [0:0] notrhs4_fu_748_p2;
reg   [0:0] notrhs4_reg_1281;
wire   [0:0] grp_fu_314_p2;
reg   [0:0] tmp_38_reg_1286;
wire   [22:0] loc_V_2_fu_789_p1;
reg   [22:0] loc_V_2_reg_1291;
wire   [0:0] isNeg_fu_803_p3;
reg   [0:0] isNeg_reg_1296;
wire   [8:0] sh_assign_1_fu_821_p3;
reg   [8:0] sh_assign_1_reg_1301;
wire   [22:0] loc_V_4_fu_846_p1;
reg   [22:0] loc_V_4_reg_1307;
wire   [0:0] isNeg_1_fu_860_p3;
reg   [0:0] isNeg_1_reg_1312;
wire   [8:0] sh_assign_3_fu_878_p3;
reg   [8:0] sh_assign_3_reg_1317;
wire   [7:0] p_Val2_17_fu_943_p3;
reg   [7:0] p_Val2_17_reg_1323;
wire   [7:0] p_Val2_18_fu_1007_p3;
reg   [7:0] p_Val2_18_reg_1328;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state3;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_enable_reg_pp0_iter20;
reg    ap_enable_reg_pp0_iter21;
reg    ap_enable_reg_pp0_iter22;
reg    ap_enable_reg_pp0_iter23;
reg    ap_enable_reg_pp0_iter24;
reg    ap_enable_reg_pp0_iter25;
reg    ap_enable_reg_pp0_iter26;
reg    ap_enable_reg_pp0_iter27;
reg    ap_enable_reg_pp0_iter28;
reg    ap_enable_reg_pp0_iter29;
reg    ap_enable_reg_pp0_iter30;
reg    ap_enable_reg_pp0_iter31;
reg    ap_enable_reg_pp0_iter32;
reg    ap_enable_reg_pp0_iter33;
reg    ap_enable_reg_pp0_iter34;
reg    ap_enable_reg_pp0_iter35;
reg    ap_enable_reg_pp0_iter36;
reg    ap_enable_reg_pp0_iter37;
reg    ap_enable_reg_pp0_iter38;
reg    ap_enable_reg_pp0_iter39;
reg    ap_enable_reg_pp0_iter40;
reg    ap_enable_reg_pp0_iter41;
reg    ap_enable_reg_pp0_iter42;
reg    ap_enable_reg_pp0_iter43;
reg    ap_enable_reg_pp0_iter44;
reg    ap_enable_reg_pp0_iter45;
reg    ap_enable_reg_pp0_iter46;
reg    ap_enable_reg_pp0_iter47;
reg    ap_enable_reg_pp0_iter48;
reg    ap_enable_reg_pp0_iter49;
reg    ap_enable_reg_pp0_iter50;
reg    ap_enable_reg_pp0_iter51;
reg    ap_enable_reg_pp0_iter52;
reg    ap_enable_reg_pp0_iter53;
reg    ap_enable_reg_pp0_iter54;
reg    ap_enable_reg_pp0_iter55;
reg   [10:0] i_reg_225;
reg    ap_block_state1;
wire    ap_CS_fsm_state60;
reg    ap_block_pp0_stage0_01001;
wire   [31:0] grp_fu_262_p0;
wire   [31:0] grp_fu_265_p0;
wire   [31:0] grp_fu_268_p0;
wire   [31:0] b_to_int_fu_396_p1;
wire   [7:0] tmp_40_fu_399_p4;
wire   [22:0] tmp_69_fu_409_p1;
wire   [0:0] notrhs5_fu_419_p2;
wire   [0:0] notlhs4_fu_413_p2;
wire   [0:0] tmp_41_fu_425_p2;
wire   [0:0] tmp_43_fu_431_p2;
wire   [7:0] tmp_44_fu_446_p4;
wire   [22:0] tmp_70_fu_456_p1;
wire   [0:0] tmp_45_fu_472_p2;
wire   [0:0] tmp_47_fu_476_p2;
wire   [31:0] p_Val2_13_fu_481_p3;
wire   [7:0] loc_V_5_fu_488_p4;
wire   [8:0] tmp_i_i_i_i86_cast_fu_502_p1;
wire   [8:0] sh_assign_4_fu_506_p2;
wire   [7:0] tmp_39_i_i_i2_fu_520_p2;
wire  signed [8:0] tmp_39_i_i_i89_cast_fu_526_p1;
wire   [24:0] tmp_38_i_i_i2_fu_538_p4;
wire  signed [31:0] sh_assign_1_i_i_i90_s_fu_551_p1;
wire  signed [24:0] sh_assign_1_i_i_i90_1_fu_554_p1;
wire   [54:0] tmp_38_i_i_i85_cast1_fu_547_p1;
wire   [54:0] tmp_40_i_i_i2_fu_557_p1;
wire   [24:0] tmp_41_i_i_i2_fu_561_p2;
wire   [0:0] tmp_79_fu_573_p3;
wire   [54:0] tmp_42_i_i_i2_fu_567_p2;
wire   [7:0] tmp_52_fu_581_p1;
wire   [7:0] tmp_53_fu_585_p4;
wire   [31:0] r_to_int_fu_602_p1;
wire   [7:0] tmp_24_fu_605_p4;
wire   [22:0] tmp_65_fu_615_p1;
wire   [0:0] notrhs_fu_625_p2;
wire   [0:0] notlhs_fu_619_p2;
wire   [0:0] tmp_25_fu_631_p2;
wire   [0:0] tmp_27_fu_637_p2;
wire   [31:0] g_to_int_fu_649_p1;
wire   [7:0] tmp_32_fu_652_p4;
wire   [22:0] tmp_67_fu_662_p1;
wire   [0:0] notrhs3_fu_672_p2;
wire   [0:0] notlhs2_fu_666_p2;
wire   [0:0] tmp_33_fu_678_p2;
wire   [0:0] tmp_35_fu_684_p2;
wire   [7:0] tmp_28_fu_699_p4;
wire   [22:0] tmp_66_fu_709_p1;
wire   [7:0] tmp_36_fu_728_p4;
wire   [22:0] tmp_68_fu_738_p1;
wire   [0:0] tmp_29_fu_754_p2;
wire   [0:0] tmp_37_fu_763_p2;
wire   [0:0] tmp_31_fu_758_p2;
wire   [31:0] p_Val2_s_fu_772_p3;
wire   [7:0] loc_V_fu_779_p4;
wire   [8:0] tmp_i_i_i_i_cast_fu_793_p1;
wire   [8:0] sh_assign_fu_797_p2;
wire   [7:0] tmp_39_i_i_i_fu_811_p2;
wire  signed [8:0] tmp_39_i_i_i_cast_fu_817_p1;
wire   [0:0] tmp_39_fu_767_p2;
wire   [31:0] p_Val2_9_fu_829_p3;
wire   [7:0] loc_V_3_fu_836_p4;
wire   [8:0] tmp_i_i_i_i69_cast_fu_850_p1;
wire   [8:0] sh_assign_2_fu_854_p2;
wire   [7:0] tmp_39_i_i_i1_fu_868_p2;
wire  signed [8:0] tmp_39_i_i_i72_cast_fu_874_p1;
wire   [24:0] tmp_38_i_i_i_fu_886_p4;
wire  signed [31:0] sh_assign_1_i_i_i_ca_fu_899_p1;
wire  signed [24:0] sh_assign_1_i_i_i_ca_1_fu_902_p1;
wire   [54:0] tmp_38_i_i_i_cast1_fu_895_p1;
wire   [54:0] tmp_40_i_i_i_fu_905_p1;
wire   [24:0] tmp_41_i_i_i_fu_909_p2;
wire   [0:0] tmp_73_fu_921_p3;
wire   [54:0] tmp_42_i_i_i_fu_915_p2;
wire   [7:0] tmp_48_fu_929_p1;
wire   [7:0] tmp_49_fu_933_p4;
wire   [24:0] tmp_38_i_i_i1_fu_950_p4;
wire  signed [31:0] sh_assign_1_i_i_i73_s_fu_963_p1;
wire  signed [24:0] sh_assign_1_i_i_i73_1_fu_966_p1;
wire   [54:0] tmp_38_i_i_i68_cast1_fu_959_p1;
wire   [54:0] tmp_40_i_i_i1_fu_969_p1;
wire   [24:0] tmp_41_i_i_i1_fu_973_p2;
wire   [0:0] tmp_76_fu_985_p3;
wire   [54:0] tmp_42_i_i_i1_fu_979_p2;
wire   [7:0] tmp_50_fu_993_p1;
wire   [7:0] tmp_51_fu_997_p4;
reg    grp_fu_247_ce;
reg    grp_fu_252_ce;
reg    grp_fu_257_ce;
reg    grp_fu_262_ce;
reg    grp_fu_265_ce;
reg    grp_fu_268_ce;
reg    grp_fu_271_ce;
reg    grp_fu_274_ce;
reg    grp_fu_277_ce;
reg    grp_fu_289_ce;
reg    ap_block_pp0_stage0_00001;
reg    grp_fu_294_ce;
reg    grp_fu_299_ce;
reg    grp_fu_304_ce;
reg    grp_fu_309_ce;
reg    grp_fu_314_ce;
reg    grp_fu_319_ce;
reg    grp_fu_323_ce;
reg    grp_fu_327_ce;
reg    grp_fu_331_ce;
reg    grp_fu_335_ce;
reg    grp_fu_340_ce;
reg    grp_fu_345_ce;
reg    grp_fu_350_ce;
reg    grp_fu_355_ce;
reg   [3:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 4'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter56 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 ap_enable_reg_pp0_iter20 = 1'b0;
#0 ap_enable_reg_pp0_iter21 = 1'b0;
#0 ap_enable_reg_pp0_iter22 = 1'b0;
#0 ap_enable_reg_pp0_iter23 = 1'b0;
#0 ap_enable_reg_pp0_iter24 = 1'b0;
#0 ap_enable_reg_pp0_iter25 = 1'b0;
#0 ap_enable_reg_pp0_iter26 = 1'b0;
#0 ap_enable_reg_pp0_iter27 = 1'b0;
#0 ap_enable_reg_pp0_iter28 = 1'b0;
#0 ap_enable_reg_pp0_iter29 = 1'b0;
#0 ap_enable_reg_pp0_iter30 = 1'b0;
#0 ap_enable_reg_pp0_iter31 = 1'b0;
#0 ap_enable_reg_pp0_iter32 = 1'b0;
#0 ap_enable_reg_pp0_iter33 = 1'b0;
#0 ap_enable_reg_pp0_iter34 = 1'b0;
#0 ap_enable_reg_pp0_iter35 = 1'b0;
#0 ap_enable_reg_pp0_iter36 = 1'b0;
#0 ap_enable_reg_pp0_iter37 = 1'b0;
#0 ap_enable_reg_pp0_iter38 = 1'b0;
#0 ap_enable_reg_pp0_iter39 = 1'b0;
#0 ap_enable_reg_pp0_iter40 = 1'b0;
#0 ap_enable_reg_pp0_iter41 = 1'b0;
#0 ap_enable_reg_pp0_iter42 = 1'b0;
#0 ap_enable_reg_pp0_iter43 = 1'b0;
#0 ap_enable_reg_pp0_iter44 = 1'b0;
#0 ap_enable_reg_pp0_iter45 = 1'b0;
#0 ap_enable_reg_pp0_iter46 = 1'b0;
#0 ap_enable_reg_pp0_iter47 = 1'b0;
#0 ap_enable_reg_pp0_iter48 = 1'b0;
#0 ap_enable_reg_pp0_iter49 = 1'b0;
#0 ap_enable_reg_pp0_iter50 = 1'b0;
#0 ap_enable_reg_pp0_iter51 = 1'b0;
#0 ap_enable_reg_pp0_iter52 = 1'b0;
#0 ap_enable_reg_pp0_iter53 = 1'b0;
#0 ap_enable_reg_pp0_iter54 = 1'b0;
#0 ap_enable_reg_pp0_iter55 = 1'b0;
end

contrastadj_fadd_pcA #(
    .ID( 1 ),
    .NUM_STAGE( 8 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
contrastadj_fadd_pcA_U60(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(y_reg_1057),
    .din1(32'd3246391296),
    .ce(grp_fu_247_ce),
    .dout(grp_fu_247_p2)
);

contrastadj_fadd_pcA #(
    .ID( 1 ),
    .NUM_STAGE( 8 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
contrastadj_fadd_pcA_U61(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(v_reg_1062),
    .din1(32'd3271557120),
    .ce(grp_fu_252_ce),
    .dout(grp_fu_252_p2)
);

contrastadj_fadd_pcA #(
    .ID( 1 ),
    .NUM_STAGE( 8 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
contrastadj_fadd_pcA_U62(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(u_reg_1082),
    .din1(32'd3271557120),
    .ce(grp_fu_257_ce),
    .dout(grp_fu_257_p2)
);

contrastadj_uitofqcK #(
    .ID( 1 ),
    .NUM_STAGE( 8 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
contrastadj_uitofqcK_U63(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_262_p0),
    .ce(grp_fu_262_ce),
    .dout(grp_fu_262_p1)
);

contrastadj_uitofqcK #(
    .ID( 1 ),
    .NUM_STAGE( 8 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
contrastadj_uitofqcK_U64(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_265_p0),
    .ce(grp_fu_265_ce),
    .dout(grp_fu_265_p1)
);

contrastadj_uitofqcK #(
    .ID( 1 ),
    .NUM_STAGE( 8 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
contrastadj_uitofqcK_U65(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_268_p0),
    .ce(grp_fu_268_ce),
    .dout(grp_fu_268_p1)
);

contrastadj_fptruhbi #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .dout_WIDTH( 32 ))
contrastadj_fptruhbi_U66(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_21_reg_1141),
    .ce(grp_fu_271_ce),
    .dout(grp_fu_271_p1)
);

contrastadj_fptruhbi #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .dout_WIDTH( 32 ))
contrastadj_fptruhbi_U67(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_8_reg_1200),
    .ce(grp_fu_274_ce),
    .dout(grp_fu_274_p1)
);

contrastadj_fptruhbi #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .dout_WIDTH( 32 ))
contrastadj_fptruhbi_U68(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_19_reg_1205),
    .ce(grp_fu_277_ce),
    .dout(grp_fu_277_p1)
);

contrastadj_fpextibs #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
contrastadj_fpextibs_U69(
    .din0(tmp_s_reg_1072),
    .dout(tmp_3_fu_280_p1)
);

contrastadj_fpextibs #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
contrastadj_fpextibs_U70(
    .din0(tmp_9_reg_1077),
    .dout(tmp_12_fu_283_p1)
);

contrastadj_fpextibs #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
contrastadj_fpextibs_U71(
    .din0(tmp_5_reg_1098),
    .dout(tmp_6_fu_286_p1)
);

contrastadj_fcmp_jbC #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
contrastadj_fcmp_jbC_U72(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(b_reg_1146),
    .din1(32'd1132396544),
    .ce(grp_fu_289_ce),
    .opcode(5'd2),
    .dout(grp_fu_289_p2)
);

contrastadj_fcmp_jbC #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
contrastadj_fcmp_jbC_U73(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(b_1_reg_1158),
    .din1(32'd0),
    .ce(grp_fu_294_ce),
    .opcode(5'd4),
    .dout(grp_fu_294_p2)
);

contrastadj_fcmp_jbC #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
contrastadj_fcmp_jbC_U74(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(r_reg_1215),
    .din1(32'd1132396544),
    .ce(grp_fu_299_ce),
    .opcode(5'd2),
    .dout(grp_fu_299_p2)
);

contrastadj_fcmp_jbC #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
contrastadj_fcmp_jbC_U75(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(g_reg_1222),
    .din1(32'd1132396544),
    .ce(grp_fu_304_ce),
    .opcode(5'd2),
    .dout(grp_fu_304_p2)
);

contrastadj_fcmp_jbC #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
contrastadj_fcmp_jbC_U76(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(r_1_reg_1239),
    .din1(32'd0),
    .ce(grp_fu_309_ce),
    .opcode(5'd4),
    .dout(grp_fu_309_p2)
);

contrastadj_fcmp_jbC #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
contrastadj_fcmp_jbC_U77(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(g_1_reg_1245),
    .din1(32'd0),
    .ce(grp_fu_314_ce),
    .opcode(5'd4),
    .dout(grp_fu_314_p2)
);

contrastadj_dsub_rcU #(
    .ID( 1 ),
    .NUM_STAGE( 9 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
contrastadj_dsub_rcU_U78(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_4_reg_1109),
    .din1(tmp_13_reg_1116),
    .ce(grp_fu_319_ce),
    .dout(grp_fu_319_p2)
);

contrastadj_dadd_kbM #(
    .ID( 1 ),
    .NUM_STAGE( 9 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
contrastadj_dadd_kbM_U79(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_4_reg_1109),
    .din1(tmp_20_reg_1121),
    .ce(grp_fu_323_ce),
    .dout(grp_fu_323_p2)
);

contrastadj_dadd_kbM #(
    .ID( 1 ),
    .NUM_STAGE( 9 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
contrastadj_dadd_kbM_U80(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(ap_reg_pp0_iter37_tmp_4_reg_1109),
    .din1(tmp_7_reg_1126),
    .ce(grp_fu_327_ce),
    .dout(grp_fu_327_p2)
);

contrastadj_dsub_rcU #(
    .ID( 1 ),
    .NUM_STAGE( 9 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
contrastadj_dsub_rcU_U81(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_17_reg_1131),
    .din1(tmp_18_reg_1136),
    .ce(grp_fu_331_ce),
    .dout(grp_fu_331_p2)
);

contrastadj_dmul_lbW #(
    .ID( 1 ),
    .NUM_STAGE( 10 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
contrastadj_dmul_lbW_U82(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_3_reg_1087),
    .din1(64'd4607921009138906169),
    .ce(grp_fu_335_ce),
    .dout(grp_fu_335_p2)
);

contrastadj_dmul_lbW #(
    .ID( 1 ),
    .NUM_STAGE( 10 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
contrastadj_dmul_lbW_U83(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_12_reg_1092),
    .din1(64'd4605498072539380842),
    .ce(grp_fu_340_ce),
    .dout(grp_fu_340_p2)
);

contrastadj_dmul_lbW #(
    .ID( 1 ),
    .NUM_STAGE( 10 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
contrastadj_dmul_lbW_U84(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_12_reg_1092),
    .din1(64'd4609866564177930224),
    .ce(grp_fu_345_ce),
    .dout(grp_fu_345_p2)
);

contrastadj_dmul_lbW #(
    .ID( 1 ),
    .NUM_STAGE( 10 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
contrastadj_dmul_lbW_U85(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_6_reg_1103),
    .din1(64'd4611726550824034238),
    .ce(grp_fu_350_ce),
    .dout(grp_fu_350_p2)
);

contrastadj_dmul_lbW #(
    .ID( 1 ),
    .NUM_STAGE( 10 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
contrastadj_dmul_lbW_U86(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_6_reg_1103),
    .din1(64'd4600715249735113376),
    .ce(grp_fu_355_ce),
    .dout(grp_fu_355_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((exitcond1_fu_360_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state3))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((exitcond1_fu_360_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state3)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state3);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter20 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter21 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter22 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter23 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter24 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter25 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter25 <= ap_enable_reg_pp0_iter24;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter26 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter26 <= ap_enable_reg_pp0_iter25;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter27 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter27 <= ap_enable_reg_pp0_iter26;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter28 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter28 <= ap_enable_reg_pp0_iter27;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter29 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter29 <= ap_enable_reg_pp0_iter28;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter30 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter30 <= ap_enable_reg_pp0_iter29;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter31 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter31 <= ap_enable_reg_pp0_iter30;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter32 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter32 <= ap_enable_reg_pp0_iter31;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter33 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter33 <= ap_enable_reg_pp0_iter32;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter34 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter34 <= ap_enable_reg_pp0_iter33;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter35 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter35 <= ap_enable_reg_pp0_iter34;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter36 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter36 <= ap_enable_reg_pp0_iter35;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter37 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter37 <= ap_enable_reg_pp0_iter36;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter38 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter38 <= ap_enable_reg_pp0_iter37;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter39 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter39 <= ap_enable_reg_pp0_iter38;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter40 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter40 <= ap_enable_reg_pp0_iter39;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter41 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter41 <= ap_enable_reg_pp0_iter40;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter42 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter42 <= ap_enable_reg_pp0_iter41;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter43 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter43 <= ap_enable_reg_pp0_iter42;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter44 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter44 <= ap_enable_reg_pp0_iter43;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter45 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter45 <= ap_enable_reg_pp0_iter44;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter46 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter46 <= ap_enable_reg_pp0_iter45;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter47 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter47 <= ap_enable_reg_pp0_iter46;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter48 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter48 <= ap_enable_reg_pp0_iter47;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter49 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter49 <= ap_enable_reg_pp0_iter48;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter50 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter50 <= ap_enable_reg_pp0_iter49;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter51 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter51 <= ap_enable_reg_pp0_iter50;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter52 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter52 <= ap_enable_reg_pp0_iter51;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter53 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter53 <= ap_enable_reg_pp0_iter52;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter54 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter54 <= ap_enable_reg_pp0_iter53;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter55 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter55 <= ap_enable_reg_pp0_iter54;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter56 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter56 <= ap_enable_reg_pp0_iter55;
        end else if (((exitcond1_fu_360_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter56 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state60)) begin
        i_reg_225 <= i_2_reg_1018;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        i_reg_225 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_fu_372_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        j_reg_236 <= j_1_fu_378_p2;
    end else if (((exitcond1_fu_360_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        j_reg_236 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_reg_pp0_iter10_exitcond_reg_1023 <= ap_reg_pp0_iter9_exitcond_reg_1023;
        ap_reg_pp0_iter10_tmp_84_reg_1037 <= ap_reg_pp0_iter9_tmp_84_reg_1037;
        ap_reg_pp0_iter11_exitcond_reg_1023 <= ap_reg_pp0_iter10_exitcond_reg_1023;
        ap_reg_pp0_iter12_exitcond_reg_1023 <= ap_reg_pp0_iter11_exitcond_reg_1023;
        ap_reg_pp0_iter13_exitcond_reg_1023 <= ap_reg_pp0_iter12_exitcond_reg_1023;
        ap_reg_pp0_iter14_exitcond_reg_1023 <= ap_reg_pp0_iter13_exitcond_reg_1023;
        ap_reg_pp0_iter15_exitcond_reg_1023 <= ap_reg_pp0_iter14_exitcond_reg_1023;
        ap_reg_pp0_iter16_exitcond_reg_1023 <= ap_reg_pp0_iter15_exitcond_reg_1023;
        ap_reg_pp0_iter17_exitcond_reg_1023 <= ap_reg_pp0_iter16_exitcond_reg_1023;
        ap_reg_pp0_iter18_exitcond_reg_1023 <= ap_reg_pp0_iter17_exitcond_reg_1023;
        ap_reg_pp0_iter19_exitcond_reg_1023 <= ap_reg_pp0_iter18_exitcond_reg_1023;
        ap_reg_pp0_iter20_exitcond_reg_1023 <= ap_reg_pp0_iter19_exitcond_reg_1023;
        ap_reg_pp0_iter21_exitcond_reg_1023 <= ap_reg_pp0_iter20_exitcond_reg_1023;
        ap_reg_pp0_iter22_exitcond_reg_1023 <= ap_reg_pp0_iter21_exitcond_reg_1023;
        ap_reg_pp0_iter23_exitcond_reg_1023 <= ap_reg_pp0_iter22_exitcond_reg_1023;
        ap_reg_pp0_iter24_exitcond_reg_1023 <= ap_reg_pp0_iter23_exitcond_reg_1023;
        ap_reg_pp0_iter25_exitcond_reg_1023 <= ap_reg_pp0_iter24_exitcond_reg_1023;
        ap_reg_pp0_iter26_exitcond_reg_1023 <= ap_reg_pp0_iter25_exitcond_reg_1023;
        ap_reg_pp0_iter27_exitcond_reg_1023 <= ap_reg_pp0_iter26_exitcond_reg_1023;
        ap_reg_pp0_iter28_exitcond_reg_1023 <= ap_reg_pp0_iter27_exitcond_reg_1023;
        ap_reg_pp0_iter29_exitcond_reg_1023 <= ap_reg_pp0_iter28_exitcond_reg_1023;
        ap_reg_pp0_iter29_tmp_4_reg_1109 <= tmp_4_reg_1109;
        ap_reg_pp0_iter2_exitcond_reg_1023 <= ap_reg_pp0_iter1_exitcond_reg_1023;
        ap_reg_pp0_iter2_tmp_84_reg_1037 <= tmp_84_reg_1037;
        ap_reg_pp0_iter30_exitcond_reg_1023 <= ap_reg_pp0_iter29_exitcond_reg_1023;
        ap_reg_pp0_iter30_tmp_4_reg_1109 <= ap_reg_pp0_iter29_tmp_4_reg_1109;
        ap_reg_pp0_iter31_exitcond_reg_1023 <= ap_reg_pp0_iter30_exitcond_reg_1023;
        ap_reg_pp0_iter31_tmp_4_reg_1109 <= ap_reg_pp0_iter30_tmp_4_reg_1109;
        ap_reg_pp0_iter32_exitcond_reg_1023 <= ap_reg_pp0_iter31_exitcond_reg_1023;
        ap_reg_pp0_iter32_tmp_4_reg_1109 <= ap_reg_pp0_iter31_tmp_4_reg_1109;
        ap_reg_pp0_iter33_exitcond_reg_1023 <= ap_reg_pp0_iter32_exitcond_reg_1023;
        ap_reg_pp0_iter33_tmp_4_reg_1109 <= ap_reg_pp0_iter32_tmp_4_reg_1109;
        ap_reg_pp0_iter34_exitcond_reg_1023 <= ap_reg_pp0_iter33_exitcond_reg_1023;
        ap_reg_pp0_iter34_tmp_4_reg_1109 <= ap_reg_pp0_iter33_tmp_4_reg_1109;
        ap_reg_pp0_iter35_exitcond_reg_1023 <= ap_reg_pp0_iter34_exitcond_reg_1023;
        ap_reg_pp0_iter35_tmp_4_reg_1109 <= ap_reg_pp0_iter34_tmp_4_reg_1109;
        ap_reg_pp0_iter36_exitcond_reg_1023 <= ap_reg_pp0_iter35_exitcond_reg_1023;
        ap_reg_pp0_iter36_tmp_4_reg_1109 <= ap_reg_pp0_iter35_tmp_4_reg_1109;
        ap_reg_pp0_iter37_exitcond_reg_1023 <= ap_reg_pp0_iter36_exitcond_reg_1023;
        ap_reg_pp0_iter37_tmp_4_reg_1109 <= ap_reg_pp0_iter36_tmp_4_reg_1109;
        ap_reg_pp0_iter38_exitcond_reg_1023 <= ap_reg_pp0_iter37_exitcond_reg_1023;
        ap_reg_pp0_iter39_exitcond_reg_1023 <= ap_reg_pp0_iter38_exitcond_reg_1023;
        ap_reg_pp0_iter3_exitcond_reg_1023 <= ap_reg_pp0_iter2_exitcond_reg_1023;
        ap_reg_pp0_iter3_tmp_84_reg_1037 <= ap_reg_pp0_iter2_tmp_84_reg_1037;
        ap_reg_pp0_iter40_b_reg_1146 <= b_reg_1146;
        ap_reg_pp0_iter40_exitcond_reg_1023 <= ap_reg_pp0_iter39_exitcond_reg_1023;
        ap_reg_pp0_iter41_b_reg_1146 <= ap_reg_pp0_iter40_b_reg_1146;
        ap_reg_pp0_iter41_exitcond_reg_1023 <= ap_reg_pp0_iter40_exitcond_reg_1023;
        ap_reg_pp0_iter42_exitcond_reg_1023 <= ap_reg_pp0_iter41_exitcond_reg_1023;
        ap_reg_pp0_iter43_b_1_reg_1158 <= b_1_reg_1158;
        ap_reg_pp0_iter43_exitcond_reg_1023 <= ap_reg_pp0_iter42_exitcond_reg_1023;
        ap_reg_pp0_iter44_exitcond_reg_1023 <= ap_reg_pp0_iter43_exitcond_reg_1023;
        ap_reg_pp0_iter45_exitcond_reg_1023 <= ap_reg_pp0_iter44_exitcond_reg_1023;
        ap_reg_pp0_iter46_exitcond_reg_1023 <= ap_reg_pp0_iter45_exitcond_reg_1023;
        ap_reg_pp0_iter47_exitcond_reg_1023 <= ap_reg_pp0_iter46_exitcond_reg_1023;
        ap_reg_pp0_iter47_p_Val2_19_reg_1210 <= p_Val2_19_reg_1210;
        ap_reg_pp0_iter48_exitcond_reg_1023 <= ap_reg_pp0_iter47_exitcond_reg_1023;
        ap_reg_pp0_iter48_p_Val2_19_reg_1210 <= ap_reg_pp0_iter47_p_Val2_19_reg_1210;
        ap_reg_pp0_iter49_exitcond_reg_1023 <= ap_reg_pp0_iter48_exitcond_reg_1023;
        ap_reg_pp0_iter49_g_reg_1222 <= g_reg_1222;
        ap_reg_pp0_iter49_p_Val2_19_reg_1210 <= ap_reg_pp0_iter48_p_Val2_19_reg_1210;
        ap_reg_pp0_iter49_r_reg_1215 <= r_reg_1215;
        ap_reg_pp0_iter4_exitcond_reg_1023 <= ap_reg_pp0_iter3_exitcond_reg_1023;
        ap_reg_pp0_iter4_tmp_84_reg_1037 <= ap_reg_pp0_iter3_tmp_84_reg_1037;
        ap_reg_pp0_iter50_exitcond_reg_1023 <= ap_reg_pp0_iter49_exitcond_reg_1023;
        ap_reg_pp0_iter50_g_reg_1222 <= ap_reg_pp0_iter49_g_reg_1222;
        ap_reg_pp0_iter50_p_Val2_19_reg_1210 <= ap_reg_pp0_iter49_p_Val2_19_reg_1210;
        ap_reg_pp0_iter50_r_reg_1215 <= ap_reg_pp0_iter49_r_reg_1215;
        ap_reg_pp0_iter51_exitcond_reg_1023 <= ap_reg_pp0_iter50_exitcond_reg_1023;
        ap_reg_pp0_iter51_p_Val2_19_reg_1210 <= ap_reg_pp0_iter50_p_Val2_19_reg_1210;
        ap_reg_pp0_iter52_exitcond_reg_1023 <= ap_reg_pp0_iter51_exitcond_reg_1023;
        ap_reg_pp0_iter52_g_1_reg_1245 <= g_1_reg_1245;
        ap_reg_pp0_iter52_p_Val2_19_reg_1210 <= ap_reg_pp0_iter51_p_Val2_19_reg_1210;
        ap_reg_pp0_iter52_r_1_reg_1239 <= r_1_reg_1239;
        ap_reg_pp0_iter53_exitcond_reg_1023 <= ap_reg_pp0_iter52_exitcond_reg_1023;
        ap_reg_pp0_iter53_p_Val2_19_reg_1210 <= ap_reg_pp0_iter52_p_Val2_19_reg_1210;
        ap_reg_pp0_iter54_exitcond_reg_1023 <= ap_reg_pp0_iter53_exitcond_reg_1023;
        ap_reg_pp0_iter54_p_Val2_19_reg_1210 <= ap_reg_pp0_iter53_p_Val2_19_reg_1210;
        ap_reg_pp0_iter55_exitcond_reg_1023 <= ap_reg_pp0_iter54_exitcond_reg_1023;
        ap_reg_pp0_iter55_p_Val2_19_reg_1210 <= ap_reg_pp0_iter54_p_Val2_19_reg_1210;
        ap_reg_pp0_iter5_exitcond_reg_1023 <= ap_reg_pp0_iter4_exitcond_reg_1023;
        ap_reg_pp0_iter5_tmp_84_reg_1037 <= ap_reg_pp0_iter4_tmp_84_reg_1037;
        ap_reg_pp0_iter6_exitcond_reg_1023 <= ap_reg_pp0_iter5_exitcond_reg_1023;
        ap_reg_pp0_iter6_tmp_84_reg_1037 <= ap_reg_pp0_iter5_tmp_84_reg_1037;
        ap_reg_pp0_iter7_exitcond_reg_1023 <= ap_reg_pp0_iter6_exitcond_reg_1023;
        ap_reg_pp0_iter7_tmp_84_reg_1037 <= ap_reg_pp0_iter6_tmp_84_reg_1037;
        ap_reg_pp0_iter8_exitcond_reg_1023 <= ap_reg_pp0_iter7_exitcond_reg_1023;
        ap_reg_pp0_iter8_tmp_84_reg_1037 <= ap_reg_pp0_iter7_tmp_84_reg_1037;
        ap_reg_pp0_iter9_exitcond_reg_1023 <= ap_reg_pp0_iter8_exitcond_reg_1023;
        ap_reg_pp0_iter9_tmp_84_reg_1037 <= ap_reg_pp0_iter8_tmp_84_reg_1037;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_reg_pp0_iter1_exitcond_reg_1023 <= exitcond_reg_1023;
        exitcond_reg_1023 <= exitcond_fu_372_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter41_exitcond_reg_1023 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        b_1_reg_1158 <= b_1_fu_436_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter43_exitcond_reg_1023 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        b_1_to_int_reg_1164 <= b_1_to_int_fu_443_p1;
        notlhs5_reg_1169 <= notlhs5_fu_460_p2;
        notrhs6_reg_1174 <= notrhs6_fu_466_p2;
        tmp_46_reg_1179 <= grp_fu_294_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter38_exitcond_reg_1023 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        b_reg_1146 <= grp_fu_271_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter50_exitcond_reg_1023 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        g_1_reg_1245 <= g_1_fu_689_p3;
        r_1_reg_1239 <= r_1_fu_642_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter52_exitcond_reg_1023 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        g_1_to_int_reg_1271 <= g_1_to_int_fu_725_p1;
        notlhs3_reg_1276 <= notlhs3_fu_742_p2;
        notlhs9_reg_1256 <= notlhs9_fu_713_p2;
        notrhs2_reg_1261 <= notrhs2_fu_719_p2;
        notrhs4_reg_1281 <= notrhs4_fu_748_p2;
        r_1_to_int_reg_1251 <= r_1_to_int_fu_696_p1;
        tmp_30_reg_1266 <= grp_fu_309_p2;
        tmp_38_reg_1286 <= grp_fu_314_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter47_exitcond_reg_1023 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        g_reg_1222 <= grp_fu_277_p1;
        r_reg_1215 <= grp_fu_274_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_2_reg_1018 <= i_2_fu_366_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter53_exitcond_reg_1023 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        isNeg_1_reg_1312 <= sh_assign_2_fu_854_p2[32'd8];
        isNeg_reg_1296 <= sh_assign_fu_797_p2[32'd8];
        loc_V_2_reg_1291 <= loc_V_2_fu_789_p1;
        loc_V_4_reg_1307 <= loc_V_4_fu_846_p1;
        sh_assign_1_reg_1301 <= sh_assign_1_fu_821_p3;
        sh_assign_3_reg_1317 <= sh_assign_3_fu_878_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter44_exitcond_reg_1023 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        isNeg_2_reg_1189 <= sh_assign_4_fu_506_p2[32'd8];
        loc_V_6_reg_1184 <= loc_V_6_fu_498_p1;
        sh_assign_5_reg_1194 <= sh_assign_5_fu_530_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter54_exitcond_reg_1023 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_Val2_17_reg_1323 <= p_Val2_17_fu_943_p3;
        p_Val2_18_reg_1328 <= p_Val2_18_fu_1007_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter45_exitcond_reg_1023 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_Val2_19_reg_1210 <= p_Val2_19_fu_595_p3;
        tmp_19_reg_1205 <= grp_fu_331_p2;
        tmp_8_reg_1200 <= grp_fu_327_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter17_exitcond_reg_1023 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_12_reg_1092 <= tmp_12_fu_283_p1;
        tmp_3_reg_1087 <= tmp_3_fu_280_p1;
        u_reg_1082 <= grp_fu_268_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter27_exitcond_reg_1023 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_13_reg_1116 <= grp_fu_340_p2;
        tmp_20_reg_1121 <= grp_fu_345_p2;
        tmp_4_reg_1109 <= grp_fu_335_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter36_exitcond_reg_1023 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_17_reg_1131 <= grp_fu_319_p2;
        tmp_18_reg_1136 <= grp_fu_355_p2;
        tmp_21_reg_1141 <= grp_fu_323_p2;
        tmp_7_reg_1126 <= grp_fu_350_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter49_exitcond_reg_1023 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_26_reg_1229 <= grp_fu_299_p2;
        tmp_34_reg_1234 <= grp_fu_304_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter40_exitcond_reg_1023 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_42_reg_1153 <= grp_fu_289_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter25_exitcond_reg_1023 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_5_reg_1098 <= grp_fu_257_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_reg_1023 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_62_reg_1042 <= p_src_data_stream_2_V_dout;
        tmp_83_reg_1032 <= p_src_data_stream_0_V_dout;
        tmp_84_reg_1037 <= p_src_data_stream_1_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter26_exitcond_reg_1023 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_6_reg_1103 <= tmp_6_fu_286_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter16_exitcond_reg_1023 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_9_reg_1077 <= grp_fu_252_p2;
        tmp_s_reg_1072 <= grp_fu_247_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter8_exitcond_reg_1023 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        v_reg_1062 <= grp_fu_265_p1;
        y_reg_1057 <= grp_fu_262_p1;
    end
end

always @ (*) begin
    if ((exitcond_fu_372_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state3 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state3 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond1_fu_360_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter56 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter55 == 1'b0) & (ap_enable_reg_pp0_iter54 == 1'b0) & (ap_enable_reg_pp0_iter53 == 1'b0) & (ap_enable_reg_pp0_iter52 == 1'b0) & (ap_enable_reg_pp0_iter51 == 1'b0) & (ap_enable_reg_pp0_iter50 == 1'b0) & (ap_enable_reg_pp0_iter49 == 1'b0) & (ap_enable_reg_pp0_iter48 == 1'b0) & (ap_enable_reg_pp0_iter47 == 1'b0) & (ap_enable_reg_pp0_iter46 == 1'b0) & (ap_enable_reg_pp0_iter45 == 1'b0) & (ap_enable_reg_pp0_iter44 == 1'b0) & (ap_enable_reg_pp0_iter43 == 1'b0) & (ap_enable_reg_pp0_iter42 == 1'b0) & (ap_enable_reg_pp0_iter41 == 1'b0) & (ap_enable_reg_pp0_iter40 == 1'b0) & (ap_enable_reg_pp0_iter39 == 1'b0) & (ap_enable_reg_pp0_iter38 == 1'b0) & (ap_enable_reg_pp0_iter37 == 1'b0) & (ap_enable_reg_pp0_iter36 == 1'b0) & (ap_enable_reg_pp0_iter35 == 1'b0) & (ap_enable_reg_pp0_iter34 == 1'b0) & (ap_enable_reg_pp0_iter33 == 1'b0) & (ap_enable_reg_pp0_iter32 == 1'b0) & (ap_enable_reg_pp0_iter31 == 1'b0) & (ap_enable_reg_pp0_iter30 == 1'b0) & (ap_enable_reg_pp0_iter29 == 1'b0) & (ap_enable_reg_pp0_iter28 == 1'b0) & (ap_enable_reg_pp0_iter27 == 1'b0) & (ap_enable_reg_pp0_iter26 == 1'b0) & (ap_enable_reg_pp0_iter25 == 1'b0) & (ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_247_ce = 1'b1;
    end else begin
        grp_fu_247_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_252_ce = 1'b1;
    end else begin
        grp_fu_252_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_257_ce = 1'b1;
    end else begin
        grp_fu_257_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_262_ce = 1'b1;
    end else begin
        grp_fu_262_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_265_ce = 1'b1;
    end else begin
        grp_fu_265_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_268_ce = 1'b1;
    end else begin
        grp_fu_268_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_271_ce = 1'b1;
    end else begin
        grp_fu_271_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_274_ce = 1'b1;
    end else begin
        grp_fu_274_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_277_ce = 1'b1;
    end else begin
        grp_fu_277_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_289_ce = 1'b1;
    end else begin
        grp_fu_289_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_294_ce = 1'b1;
    end else begin
        grp_fu_294_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_299_ce = 1'b1;
    end else begin
        grp_fu_299_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_304_ce = 1'b1;
    end else begin
        grp_fu_304_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_309_ce = 1'b1;
    end else begin
        grp_fu_309_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_314_ce = 1'b1;
    end else begin
        grp_fu_314_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_319_ce = 1'b1;
    end else begin
        grp_fu_319_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_323_ce = 1'b1;
    end else begin
        grp_fu_323_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_327_ce = 1'b1;
    end else begin
        grp_fu_327_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_331_ce = 1'b1;
    end else begin
        grp_fu_331_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_335_ce = 1'b1;
    end else begin
        grp_fu_335_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_340_ce = 1'b1;
    end else begin
        grp_fu_340_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_345_ce = 1'b1;
    end else begin
        grp_fu_345_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_350_ce = 1'b1;
    end else begin
        grp_fu_350_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_355_ce = 1'b1;
    end else begin
        grp_fu_355_ce = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond1_fu_360_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_reg_pp0_iter55_exitcond_reg_1023 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter56 == 1'b1))) begin
        p_dst_data_stream_0_V_blk_n = p_dst_data_stream_0_V_full_n;
    end else begin
        p_dst_data_stream_0_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_reg_pp0_iter55_exitcond_reg_1023 == 1'd0) & (ap_enable_reg_pp0_iter56 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_dst_data_stream_0_V_write = 1'b1;
    end else begin
        p_dst_data_stream_0_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_reg_pp0_iter55_exitcond_reg_1023 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter56 == 1'b1))) begin
        p_dst_data_stream_1_V_blk_n = p_dst_data_stream_1_V_full_n;
    end else begin
        p_dst_data_stream_1_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_reg_pp0_iter55_exitcond_reg_1023 == 1'd0) & (ap_enable_reg_pp0_iter56 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_dst_data_stream_1_V_write = 1'b1;
    end else begin
        p_dst_data_stream_1_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_reg_pp0_iter55_exitcond_reg_1023 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter56 == 1'b1))) begin
        p_dst_data_stream_2_V_blk_n = p_dst_data_stream_2_V_full_n;
    end else begin
        p_dst_data_stream_2_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_reg_pp0_iter55_exitcond_reg_1023 == 1'd0) & (ap_enable_reg_pp0_iter56 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_dst_data_stream_2_V_write = 1'b1;
    end else begin
        p_dst_data_stream_2_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_reg_1023 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_src_data_stream_0_V_blk_n = p_src_data_stream_0_V_empty_n;
    end else begin
        p_src_data_stream_0_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((exitcond_reg_1023 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_src_data_stream_0_V_read = 1'b1;
    end else begin
        p_src_data_stream_0_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_reg_1023 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_src_data_stream_1_V_blk_n = p_src_data_stream_1_V_empty_n;
    end else begin
        p_src_data_stream_1_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((exitcond_reg_1023 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_src_data_stream_1_V_read = 1'b1;
    end else begin
        p_src_data_stream_1_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_reg_1023 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_src_data_stream_2_V_blk_n = p_src_data_stream_2_V_empty_n;
    end else begin
        p_src_data_stream_2_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((exitcond_reg_1023 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_src_data_stream_2_V_read = 1'b1;
    end else begin
        p_src_data_stream_2_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((exitcond1_fu_360_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_fu_372_p2 == 1'd1)) & ~((ap_enable_reg_pp0_iter55 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter56 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter55 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter56 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_fu_372_p2 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state60;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state60 = ap_CS_fsm[32'd3];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_00001 = (((ap_enable_reg_pp0_iter56 == 1'b1) & (((ap_reg_pp0_iter55_exitcond_reg_1023 == 1'd0) & (p_dst_data_stream_2_V_full_n == 1'b0)) | ((ap_reg_pp0_iter55_exitcond_reg_1023 == 1'd0) & (p_dst_data_stream_1_V_full_n == 1'b0)) | ((ap_reg_pp0_iter55_exitcond_reg_1023 == 1'd0) & (p_dst_data_stream_0_V_full_n == 1'b0)))) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((exitcond_reg_1023 == 1'd0) & (p_src_data_stream_2_V_empty_n == 1'b0)) | ((exitcond_reg_1023 == 1'd0) & (p_src_data_stream_1_V_empty_n == 1'b0)) | ((exitcond_reg_1023 == 1'd0) & (p_src_data_stream_0_V_empty_n == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((ap_enable_reg_pp0_iter56 == 1'b1) & (((ap_reg_pp0_iter55_exitcond_reg_1023 == 1'd0) & (p_dst_data_stream_2_V_full_n == 1'b0)) | ((ap_reg_pp0_iter55_exitcond_reg_1023 == 1'd0) & (p_dst_data_stream_1_V_full_n == 1'b0)) | ((ap_reg_pp0_iter55_exitcond_reg_1023 == 1'd0) & (p_dst_data_stream_0_V_full_n == 1'b0)))) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((exitcond_reg_1023 == 1'd0) & (p_src_data_stream_2_V_empty_n == 1'b0)) | ((exitcond_reg_1023 == 1'd0) & (p_src_data_stream_1_V_empty_n == 1'b0)) | ((exitcond_reg_1023 == 1'd0) & (p_src_data_stream_0_V_empty_n == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_enable_reg_pp0_iter56 == 1'b1) & (((ap_reg_pp0_iter55_exitcond_reg_1023 == 1'd0) & (p_dst_data_stream_2_V_full_n == 1'b0)) | ((ap_reg_pp0_iter55_exitcond_reg_1023 == 1'd0) & (p_dst_data_stream_1_V_full_n == 1'b0)) | ((ap_reg_pp0_iter55_exitcond_reg_1023 == 1'd0) & (p_dst_data_stream_0_V_full_n == 1'b0)))) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((exitcond_reg_1023 == 1'd0) & (p_src_data_stream_2_V_empty_n == 1'b0)) | ((exitcond_reg_1023 == 1'd0) & (p_src_data_stream_1_V_empty_n == 1'b0)) | ((exitcond_reg_1023 == 1'd0) & (p_src_data_stream_0_V_empty_n == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_enable_reg_pp0_iter56 == 1'b1) & (((ap_reg_pp0_iter55_exitcond_reg_1023 == 1'd0) & (p_dst_data_stream_2_V_full_n == 1'b0)) | ((ap_reg_pp0_iter55_exitcond_reg_1023 == 1'd0) & (p_dst_data_stream_1_V_full_n == 1'b0)) | ((ap_reg_pp0_iter55_exitcond_reg_1023 == 1'd0) & (p_dst_data_stream_0_V_full_n == 1'b0)))) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((exitcond_reg_1023 == 1'd0) & (p_src_data_stream_2_V_empty_n == 1'b0)) | ((exitcond_reg_1023 == 1'd0) & (p_src_data_stream_1_V_empty_n == 1'b0)) | ((exitcond_reg_1023 == 1'd0) & (p_src_data_stream_0_V_empty_n == 1'b0)))));
end

always @ (*) begin
    ap_block_state1 = ((real_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state10_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage0_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage0_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage0_iter21 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage0_iter22 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage0_iter23 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage0_iter24 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage0_iter25 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage0_iter26 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage0_iter27 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage0_iter28 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage0_iter29 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage0_iter30 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp0_stage0_iter31 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp0_stage0_iter32 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp0_stage0_iter33 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp0_stage0_iter34 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp0_stage0_iter35 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp0_stage0_iter36 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp0_stage0_iter37 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp0_stage0_iter38 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp0_stage0_iter39 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp0_stage0_iter40 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp0_stage0_iter41 = ~(1'b1 == 1'b1);

assign ap_block_state45_pp0_stage0_iter42 = ~(1'b1 == 1'b1);

assign ap_block_state46_pp0_stage0_iter43 = ~(1'b1 == 1'b1);

assign ap_block_state47_pp0_stage0_iter44 = ~(1'b1 == 1'b1);

assign ap_block_state48_pp0_stage0_iter45 = ~(1'b1 == 1'b1);

assign ap_block_state49_pp0_stage0_iter46 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state4_pp0_stage0_iter1 = (((exitcond_reg_1023 == 1'd0) & (p_src_data_stream_2_V_empty_n == 1'b0)) | ((exitcond_reg_1023 == 1'd0) & (p_src_data_stream_1_V_empty_n == 1'b0)) | ((exitcond_reg_1023 == 1'd0) & (p_src_data_stream_0_V_empty_n == 1'b0)));
end

assign ap_block_state50_pp0_stage0_iter47 = ~(1'b1 == 1'b1);

assign ap_block_state51_pp0_stage0_iter48 = ~(1'b1 == 1'b1);

assign ap_block_state52_pp0_stage0_iter49 = ~(1'b1 == 1'b1);

assign ap_block_state53_pp0_stage0_iter50 = ~(1'b1 == 1'b1);

assign ap_block_state54_pp0_stage0_iter51 = ~(1'b1 == 1'b1);

assign ap_block_state55_pp0_stage0_iter52 = ~(1'b1 == 1'b1);

assign ap_block_state56_pp0_stage0_iter53 = ~(1'b1 == 1'b1);

assign ap_block_state57_pp0_stage0_iter54 = ~(1'b1 == 1'b1);

assign ap_block_state58_pp0_stage0_iter55 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state59_pp0_stage0_iter56 = (((ap_reg_pp0_iter55_exitcond_reg_1023 == 1'd0) & (p_dst_data_stream_2_V_full_n == 1'b0)) | ((ap_reg_pp0_iter55_exitcond_reg_1023 == 1'd0) & (p_dst_data_stream_1_V_full_n == 1'b0)) | ((ap_reg_pp0_iter55_exitcond_reg_1023 == 1'd0) & (p_dst_data_stream_0_V_full_n == 1'b0)));
end

assign ap_block_state5_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_ready = internal_ap_ready;

assign b_1_fu_436_p3 = ((tmp_43_fu_431_p2[0:0] === 1'b1) ? 32'd1132396544 : ap_reg_pp0_iter41_b_reg_1146);

assign b_1_to_int_fu_443_p1 = ap_reg_pp0_iter43_b_1_reg_1158;

assign b_to_int_fu_396_p1 = ap_reg_pp0_iter41_b_reg_1146;

assign exitcond1_fu_360_p2 = ((i_reg_225 == 11'd1080) ? 1'b1 : 1'b0);

assign exitcond_fu_372_p2 = ((j_reg_236 == 11'd1920) ? 1'b1 : 1'b0);

assign g_1_fu_689_p3 = ((tmp_35_fu_684_p2[0:0] === 1'b1) ? 32'd1132396544 : ap_reg_pp0_iter50_g_reg_1222);

assign g_1_to_int_fu_725_p1 = ap_reg_pp0_iter52_g_1_reg_1245;

assign g_to_int_fu_649_p1 = ap_reg_pp0_iter50_g_reg_1222;

assign grp_fu_262_p0 = tmp_83_reg_1032;

assign grp_fu_265_p0 = tmp_62_reg_1042;

assign grp_fu_268_p0 = ap_reg_pp0_iter10_tmp_84_reg_1037;

assign i_2_fu_366_p2 = (i_reg_225 + 11'd1);

assign isNeg_1_fu_860_p3 = sh_assign_2_fu_854_p2[32'd8];

assign isNeg_2_fu_512_p3 = sh_assign_4_fu_506_p2[32'd8];

assign isNeg_fu_803_p3 = sh_assign_fu_797_p2[32'd8];

assign j_1_fu_378_p2 = (j_reg_236 + 11'd1);

assign loc_V_2_fu_789_p1 = p_Val2_s_fu_772_p3[22:0];

assign loc_V_3_fu_836_p4 = {{p_Val2_9_fu_829_p3[30:23]}};

assign loc_V_4_fu_846_p1 = p_Val2_9_fu_829_p3[22:0];

assign loc_V_5_fu_488_p4 = {{p_Val2_13_fu_481_p3[30:23]}};

assign loc_V_6_fu_498_p1 = p_Val2_13_fu_481_p3[22:0];

assign loc_V_fu_779_p4 = {{p_Val2_s_fu_772_p3[30:23]}};

assign notlhs2_fu_666_p2 = ((tmp_32_fu_652_p4 != 8'd255) ? 1'b1 : 1'b0);

assign notlhs3_fu_742_p2 = ((tmp_36_fu_728_p4 != 8'd255) ? 1'b1 : 1'b0);

assign notlhs4_fu_413_p2 = ((tmp_40_fu_399_p4 != 8'd255) ? 1'b1 : 1'b0);

assign notlhs5_fu_460_p2 = ((tmp_44_fu_446_p4 != 8'd255) ? 1'b1 : 1'b0);

assign notlhs9_fu_713_p2 = ((tmp_28_fu_699_p4 != 8'd255) ? 1'b1 : 1'b0);

assign notlhs_fu_619_p2 = ((tmp_24_fu_605_p4 != 8'd255) ? 1'b1 : 1'b0);

assign notrhs2_fu_719_p2 = ((tmp_66_fu_709_p1 == 23'd0) ? 1'b1 : 1'b0);

assign notrhs3_fu_672_p2 = ((tmp_67_fu_662_p1 == 23'd0) ? 1'b1 : 1'b0);

assign notrhs4_fu_748_p2 = ((tmp_68_fu_738_p1 == 23'd0) ? 1'b1 : 1'b0);

assign notrhs5_fu_419_p2 = ((tmp_69_fu_409_p1 == 23'd0) ? 1'b1 : 1'b0);

assign notrhs6_fu_466_p2 = ((tmp_70_fu_456_p1 == 23'd0) ? 1'b1 : 1'b0);

assign notrhs_fu_625_p2 = ((tmp_65_fu_615_p1 == 23'd0) ? 1'b1 : 1'b0);

assign p_Val2_13_fu_481_p3 = ((tmp_47_fu_476_p2[0:0] === 1'b1) ? 32'd0 : b_1_to_int_reg_1164);

assign p_Val2_17_fu_943_p3 = ((isNeg_reg_1296[0:0] === 1'b1) ? tmp_48_fu_929_p1 : tmp_49_fu_933_p4);

assign p_Val2_18_fu_1007_p3 = ((isNeg_1_reg_1312[0:0] === 1'b1) ? tmp_50_fu_993_p1 : tmp_51_fu_997_p4);

assign p_Val2_19_fu_595_p3 = ((isNeg_2_reg_1189[0:0] === 1'b1) ? tmp_52_fu_581_p1 : tmp_53_fu_585_p4);

assign p_Val2_9_fu_829_p3 = ((tmp_39_fu_767_p2[0:0] === 1'b1) ? 32'd0 : g_1_to_int_reg_1271);

assign p_Val2_s_fu_772_p3 = ((tmp_31_fu_758_p2[0:0] === 1'b1) ? 32'd0 : r_1_to_int_reg_1251);

assign p_dst_data_stream_0_V_din = p_Val2_17_reg_1323;

assign p_dst_data_stream_1_V_din = p_Val2_18_reg_1328;

assign p_dst_data_stream_2_V_din = ap_reg_pp0_iter55_p_Val2_19_reg_1210;

assign r_1_fu_642_p3 = ((tmp_27_fu_637_p2[0:0] === 1'b1) ? 32'd1132396544 : ap_reg_pp0_iter50_r_reg_1215);

assign r_1_to_int_fu_696_p1 = ap_reg_pp0_iter52_r_1_reg_1239;

assign r_to_int_fu_602_p1 = ap_reg_pp0_iter50_r_reg_1215;

assign sh_assign_1_fu_821_p3 = ((isNeg_fu_803_p3[0:0] === 1'b1) ? tmp_39_i_i_i_cast_fu_817_p1 : sh_assign_fu_797_p2);

assign sh_assign_1_i_i_i73_1_fu_966_p1 = $signed(sh_assign_3_reg_1317);

assign sh_assign_1_i_i_i73_s_fu_963_p1 = $signed(sh_assign_3_reg_1317);

assign sh_assign_1_i_i_i90_1_fu_554_p1 = $signed(sh_assign_5_reg_1194);

assign sh_assign_1_i_i_i90_s_fu_551_p1 = $signed(sh_assign_5_reg_1194);

assign sh_assign_1_i_i_i_ca_1_fu_902_p1 = $signed(sh_assign_1_reg_1301);

assign sh_assign_1_i_i_i_ca_fu_899_p1 = $signed(sh_assign_1_reg_1301);

assign sh_assign_2_fu_854_p2 = ($signed(9'd385) + $signed(tmp_i_i_i_i69_cast_fu_850_p1));

assign sh_assign_3_fu_878_p3 = ((isNeg_1_fu_860_p3[0:0] === 1'b1) ? tmp_39_i_i_i72_cast_fu_874_p1 : sh_assign_2_fu_854_p2);

assign sh_assign_4_fu_506_p2 = ($signed(9'd385) + $signed(tmp_i_i_i_i86_cast_fu_502_p1));

assign sh_assign_5_fu_530_p3 = ((isNeg_2_fu_512_p3[0:0] === 1'b1) ? tmp_39_i_i_i89_cast_fu_526_p1 : sh_assign_4_fu_506_p2);

assign sh_assign_fu_797_p2 = ($signed(9'd385) + $signed(tmp_i_i_i_i_cast_fu_793_p1));

assign start_out = real_start;

assign tmp_24_fu_605_p4 = {{r_to_int_fu_602_p1[30:23]}};

assign tmp_25_fu_631_p2 = (notrhs_fu_625_p2 | notlhs_fu_619_p2);

assign tmp_27_fu_637_p2 = (tmp_26_reg_1229 & tmp_25_fu_631_p2);

assign tmp_28_fu_699_p4 = {{r_1_to_int_fu_696_p1[30:23]}};

assign tmp_29_fu_754_p2 = (notrhs2_reg_1261 | notlhs9_reg_1256);

assign tmp_31_fu_758_p2 = (tmp_30_reg_1266 & tmp_29_fu_754_p2);

assign tmp_32_fu_652_p4 = {{g_to_int_fu_649_p1[30:23]}};

assign tmp_33_fu_678_p2 = (notrhs3_fu_672_p2 | notlhs2_fu_666_p2);

assign tmp_35_fu_684_p2 = (tmp_34_reg_1234 & tmp_33_fu_678_p2);

assign tmp_36_fu_728_p4 = {{g_1_to_int_fu_725_p1[30:23]}};

assign tmp_37_fu_763_p2 = (notrhs4_reg_1281 | notlhs3_reg_1276);

assign tmp_38_i_i_i1_fu_950_p4 = {{{{1'd1}, {loc_V_4_reg_1307}}}, {1'd0}};

assign tmp_38_i_i_i2_fu_538_p4 = {{{{1'd1}, {loc_V_6_reg_1184}}}, {1'd0}};

assign tmp_38_i_i_i68_cast1_fu_959_p1 = tmp_38_i_i_i1_fu_950_p4;

assign tmp_38_i_i_i85_cast1_fu_547_p1 = tmp_38_i_i_i2_fu_538_p4;

assign tmp_38_i_i_i_cast1_fu_895_p1 = tmp_38_i_i_i_fu_886_p4;

assign tmp_38_i_i_i_fu_886_p4 = {{{{1'd1}, {loc_V_2_reg_1291}}}, {1'd0}};

assign tmp_39_fu_767_p2 = (tmp_38_reg_1286 & tmp_37_fu_763_p2);

assign tmp_39_i_i_i1_fu_868_p2 = (8'd127 - loc_V_3_fu_836_p4);

assign tmp_39_i_i_i2_fu_520_p2 = (8'd127 - loc_V_5_fu_488_p4);

assign tmp_39_i_i_i72_cast_fu_874_p1 = $signed(tmp_39_i_i_i1_fu_868_p2);

assign tmp_39_i_i_i89_cast_fu_526_p1 = $signed(tmp_39_i_i_i2_fu_520_p2);

assign tmp_39_i_i_i_cast_fu_817_p1 = $signed(tmp_39_i_i_i_fu_811_p2);

assign tmp_39_i_i_i_fu_811_p2 = (8'd127 - loc_V_fu_779_p4);

assign tmp_40_fu_399_p4 = {{b_to_int_fu_396_p1[30:23]}};

assign tmp_40_i_i_i1_fu_969_p1 = $unsigned(sh_assign_1_i_i_i73_s_fu_963_p1);

assign tmp_40_i_i_i2_fu_557_p1 = $unsigned(sh_assign_1_i_i_i90_s_fu_551_p1);

assign tmp_40_i_i_i_fu_905_p1 = $unsigned(sh_assign_1_i_i_i_ca_fu_899_p1);

assign tmp_41_fu_425_p2 = (notrhs5_fu_419_p2 | notlhs4_fu_413_p2);

assign tmp_41_i_i_i1_fu_973_p2 = tmp_38_i_i_i1_fu_950_p4 >> sh_assign_1_i_i_i73_1_fu_966_p1;

assign tmp_41_i_i_i2_fu_561_p2 = tmp_38_i_i_i2_fu_538_p4 >> sh_assign_1_i_i_i90_1_fu_554_p1;

assign tmp_41_i_i_i_fu_909_p2 = tmp_38_i_i_i_fu_886_p4 >> sh_assign_1_i_i_i_ca_1_fu_902_p1;

assign tmp_42_i_i_i1_fu_979_p2 = tmp_38_i_i_i68_cast1_fu_959_p1 << tmp_40_i_i_i1_fu_969_p1;

assign tmp_42_i_i_i2_fu_567_p2 = tmp_38_i_i_i85_cast1_fu_547_p1 << tmp_40_i_i_i2_fu_557_p1;

assign tmp_42_i_i_i_fu_915_p2 = tmp_38_i_i_i_cast1_fu_895_p1 << tmp_40_i_i_i_fu_905_p1;

assign tmp_43_fu_431_p2 = (tmp_42_reg_1153 & tmp_41_fu_425_p2);

assign tmp_44_fu_446_p4 = {{b_1_to_int_fu_443_p1[30:23]}};

assign tmp_45_fu_472_p2 = (notrhs6_reg_1174 | notlhs5_reg_1169);

assign tmp_47_fu_476_p2 = (tmp_46_reg_1179 & tmp_45_fu_472_p2);

assign tmp_48_fu_929_p1 = tmp_73_fu_921_p3;

assign tmp_49_fu_933_p4 = {{tmp_42_i_i_i_fu_915_p2[31:24]}};

assign tmp_50_fu_993_p1 = tmp_76_fu_985_p3;

assign tmp_51_fu_997_p4 = {{tmp_42_i_i_i1_fu_979_p2[31:24]}};

assign tmp_52_fu_581_p1 = tmp_79_fu_573_p3;

assign tmp_53_fu_585_p4 = {{tmp_42_i_i_i2_fu_567_p2[31:24]}};

assign tmp_65_fu_615_p1 = r_to_int_fu_602_p1[22:0];

assign tmp_66_fu_709_p1 = r_1_to_int_fu_696_p1[22:0];

assign tmp_67_fu_662_p1 = g_to_int_fu_649_p1[22:0];

assign tmp_68_fu_738_p1 = g_1_to_int_fu_725_p1[22:0];

assign tmp_69_fu_409_p1 = b_to_int_fu_396_p1[22:0];

assign tmp_70_fu_456_p1 = b_1_to_int_fu_443_p1[22:0];

assign tmp_73_fu_921_p3 = tmp_41_i_i_i_fu_909_p2[32'd24];

assign tmp_76_fu_985_p3 = tmp_41_i_i_i1_fu_973_p2[32'd24];

assign tmp_79_fu_573_p3 = tmp_41_i_i_i2_fu_561_p2[32'd24];

assign tmp_i_i_i_i69_cast_fu_850_p1 = loc_V_3_fu_836_p4;

assign tmp_i_i_i_i86_cast_fu_502_p1 = loc_V_5_fu_488_p4;

assign tmp_i_i_i_i_cast_fu_793_p1 = loc_V_fu_779_p4;

endmodule //Cvt_YCrCb_to_RGB
